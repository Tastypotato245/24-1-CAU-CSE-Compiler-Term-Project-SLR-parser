CODE -> CODE_D
CODE_D -> FDECL CODE_D
CODE_D -> VDECL CODE_D
CODE_D -> ''
VDECL -> VTYPE id ;
VDECL -> VTYPE ASSIGN ;
ASSIGN -> id = RHS
RHS -> EXPR 
RHS -> literal 
RHS -> character
RHS -> BOOLSTR
EXPR -> EXPR_D ADDSUB EXPR
EXPR -> EXPR_D
EXPR_D -> EXPR_DD MULDIV EXPR_D
EXPR_D -> EXPR_DD
EXPR_DD -> ( EXPR ) 
EXPR_DD -> id 
EXPR_DD -> num
FDECL -> VTYPE id ( ARG ) { BLOCK RETURN }
ARG -> VTYPE id MOREARGS 
ARG -> ''
MOREARGS -> , VTYPE id MOREARGS 
MOREARGS -> ''
BLOCK -> STMT BLOCK
BLOCK -> ''
STMT -> VDECL 
STMT -> ASSIGN ;
STMT -> if ( COND ) { BLOCK } ELSE
STMT -> while ( COND ) { BLOCK }
COND -> BOOLSTR COMP COND
COND -> BOOLSTR
ELSE -> else { BLOCK }
ELSE -> ''
RETURN -> return RHS ;
ADDSUB -> +
ADDSUB -> -
MULDIV -> *
MULDIV -> /
COMP -> ==
COMP -> !=
BOOLSTR -> true
BOOLSTR -> false
VTYPE -> int
VTYPE -> float
VTYPE -> char
